{"version":3,"file":"auth.js","sourceRoot":"","sources":["../../src/routes/auth.ts"],"names":[],"mappings":";;AAAA,qCAAiC;AACjC,yDAAgD;AAChD,gDAAyD;AACzD,oCAAgD;AAChD,gDAAsD;AAEtD,MAAM,MAAM,GAAG,IAAA,gBAAM,GAAE,CAAC;AAExB,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,IAAA,+BAAW,EAAC,4BAAoB,CAAC,EAAE,kCAAoB,EAAE,0BAAY,CAAC,CAAC;AAChG,MAAM,CAAC,IAAI,CACT,QAAQ,EACR,IAAA,+BAAW,EAAC;IACV,KAAK,EAAE,4BAAoB,CAAC,KAAK;IACjC,QAAQ,EAAE,4BAAoB,CAAC,QAAQ;CACxC,CAAC,EACF,kCAAoB,EACpB,uBAAS,CACV,CAAC;AAEF,kBAAe,MAAM,CAAC","sourcesContent":["import { Router } from 'express';\nimport { checkSchema } from 'express-validator';\nimport { loginUser, registerUser } from '../controllers';\nimport { userValidationSchema } from '../utils';\nimport { validationMiddleware } from '../middlewares';\n\nconst router = Router();\n\nrouter.post('/register', checkSchema(userValidationSchema), validationMiddleware, registerUser);\nrouter.post(\n  '/login',\n  checkSchema({\n    email: userValidationSchema.email,\n    password: userValidationSchema.password,\n  }),\n  validationMiddleware,\n  loginUser\n);\n\nexport default router;\n"]}