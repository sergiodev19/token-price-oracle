{"version":3,"file":"validator.js","sourceRoot":"","sources":["../../../../src/config/databases/mongo/validator.ts"],"names":[],"mappings":";;;AAAA,MAAM,WAAW,GAAG,iDAAiD,CAAC;AACtE,MAAM,cAAc,GAAG,8CAA8C,CAAC;AAEzD,QAAA,mBAAmB,GAAG;IACjC,WAAW,EAAE;QACX,QAAQ,EAAE,QAAQ;QAClB,KAAK,EAAE,wBAAwB;QAC/B,QAAQ,EAAE,CAAC,MAAM,EAAE,OAAO,EAAE,UAAU,EAAE,YAAY,CAAC;QACrD,UAAU,EAAE;YACV,IAAI,EAAE;gBACJ,SAAS,EAAE,CAAC;gBACZ,SAAS,EAAE,EAAE;gBACb,QAAQ,EAAE,QAAQ;gBAClB,WAAW,EAAE,yCAAyC;aACvD;YACD,KAAK,EAAE;gBACL,QAAQ,EAAE,QAAQ;gBAClB,OAAO,EAAE,WAAW;gBACpB,WAAW,EAAE,wDAAwD;aACtE;YACD,QAAQ,EAAE;gBACR,QAAQ,EAAE,QAAQ;gBAClB,OAAO,EAAE,cAAc;gBACvB,WAAW,EAAE,2DAA2D;aACzE;YACD,UAAU,EAAE;gBACV,QAAQ,EAAE,MAAM;gBAChB,WAAW,EAAE,uCAAuC;aACrD;YACD,UAAU,EAAE;gBACV,QAAQ,EAAE,MAAM;gBAChB,WAAW,EAAE,uCAAuC;aACrD;SACF;KACF;CACF,CAAC","sourcesContent":["const EMAIL_REGEX = '^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+.[a-zA-Z]{2,}$';\nconst PASSWORD_REGEX = '^(?=.*[a-z])(?=.*[A-Z])(?=.*d)[a-zA-Zd]{8,}$';\n\nexport const userSchemaValidator = {\n  $jsonSchema: {\n    bsonType: 'object',\n    title: 'User Object Validation',\n    required: ['name', 'email', 'password', 'created_at'],\n    properties: {\n      name: {\n        minLength: 3,\n        maxLength: 30,\n        bsonType: 'string',\n        description: \"'name' must be a string and is required\",\n      },\n      email: {\n        bsonType: 'string',\n        pattern: EMAIL_REGEX,\n        description: \"'email' must be a string and match the specified regex\",\n      },\n      password: {\n        bsonType: 'string',\n        pattern: PASSWORD_REGEX,\n        description: \"'password' must be a string and match the specified regex\",\n      },\n      created_at: {\n        bsonType: 'date',\n        description: \"'date' must be a date and is required\",\n      },\n      updated_at: {\n        bsonType: 'date',\n        description: \"'date' must be a date and is optional\",\n      },\n    },\n  },\n};\n"]}