{"version":3,"file":"users.js","sourceRoot":"","sources":["../../src/controllers/users.ts"],"names":[],"mappings":";;;;;;;;;;;;AACA,uCAAiC;AACjC,sCAAsC;AACtC,oCAAyC;AAElC,MAAM,WAAW,GAAG,CAAO,GAAY,EAAE,GAAa,EAAE,IAAkB,EAAE,EAAE;IACnF,MAAM,EAAE,GAAG,IAAI,gBAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;IAE7C,IAAI,CAAC;QACH,MAAM,IAAI,GAAG,MAAM,kBAAS,CAAC,QAAQ,CAAC,EAAE,EAAE,WAAW,CAAC,CAAC,IAAI,EAAE,CAAC;QAE9D,IAAI,CAAC,IAAI,EAAE,CAAC;YACV,MAAM,IAAI,qBAAa,CAAC,qCAAqC,GAAG,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC;QAChF,CAAC;QAED,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC7B,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,IAAI,CAAC,KAAK,CAAC,CAAC;IACd,CAAC;AACH,CAAC,CAAA,CAAC;AAdW,QAAA,WAAW,eActB","sourcesContent":["import { NextFunction, Request, Response } from 'express';\nimport { Types } from 'mongoose';\nimport { UserModel } from '../models';\nimport { NotFoundError } from '../utils';\n\nexport const getUserById = async (req: Request, res: Response, next: NextFunction) => {\n  const id = new Types.ObjectId(req.params.id);\n\n  try {\n    const user = await UserModel.findById(id, '-password').exec();\n\n    if (!user) {\n      throw new NotFoundError(`User does not exists with this id ${req.params.id}`);\n    }\n\n    res.status(200).json(user);\n  } catch (error) {\n    next(error);\n  }\n};\n"]}