{"version":3,"file":"SupportedDataSourcesModel.js","sourceRoot":"","sources":["../../src/models/SupportedDataSourcesModel.ts"],"names":[],"mappings":";;;AAAA,uCAA0D;AAC1D,oCAA8F;AAEjF,QAAA,gCAAgC,GAAG,wBAAwB,CAAC;AAEzE,MAAM,0BAA0B,GAAW,IAAI,iBAAM,CACnD;IACE,IAAI,EAAE;QACJ,IAAI,EAAE,MAAM;QACZ,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE;YACJ,MAAM,EAAE,MAAM,CAAC,MAAM,CAAC,4BAAoB,CAAC;YAC3C,OAAO,EAAE,6BAA6B;SACvC;KACF;IACD,UAAU,EAAE;QACV,IAAI,EAAE,MAAM;QACZ,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE;YACJ,MAAM,EAAE,MAAM,CAAC,MAAM,CAAC,wBAAgB,CAAC;YACvC,OAAO,EAAE,6BAA6B;SACvC;KACF;CACF,EACD,EAAE,UAAU,EAAE,IAAI,EAAE,CACrB,CAAC;AAIW,QAAA,yBAAyB,GACpC,IAAA,gBAAK,EAA6B,wCAAgC,EAAE,0BAA0B,CAAC,CAAC","sourcesContent":["import { Schema, Document, Model, model } from 'mongoose';\nimport { IDataSourceTypes, ISupportedDataSourceSchema, SupportedDataSources } from '../utils';\n\nexport const SUPPORTED_DATA_SOURCE_COLLECTION = 'supported-data-sources';\n\nconst SupportedDataSourcesSchema: Schema = new Schema<ISupportedDataSourceSchema>(\n  {\n    name: {\n      type: String,\n      required: true,\n      enum: {\n        values: Object.values(SupportedDataSources),\n        message: '{VALUE} is not a valid type',\n      }\n    },\n    sourceType: {\n      type: String,\n      required: true,\n      enum: {\n        values: Object.values(IDataSourceTypes),\n        message: '{VALUE} is not a valid type',\n      },\n    },\n  },\n  { timestamps: true },\n);\n\ninterface ISupportedDataSourcesModel extends ISupportedDataSourceSchema, Document {}\n\nexport const SupportedDataSourcesModel: Model<ISupportedDataSourcesModel> =\n  model<ISupportedDataSourcesModel>(SUPPORTED_DATA_SOURCE_COLLECTION, SupportedDataSourcesSchema);\n"]}