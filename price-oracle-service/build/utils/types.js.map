{"version":3,"file":"types.js","sourceRoot":"","sources":["../../src/utils/types.ts"],"names":[],"mappings":";;;AAcA,IAAY,gBAGX;AAHD,WAAY,gBAAgB;IAC1B,+BAAW,CAAA;IACX,+BAAW,CAAA;AACb,CAAC,EAHW,gBAAgB,gCAAhB,gBAAgB,QAG3B;AAED,IAAY,oBAIX;AAJD,WAAY,oBAAoB;IAC9B,2CAAmB,CAAA;IACnB,yDAAiC,CAAA;IACjC,2CAAmB,CAAA;AACrB,CAAC,EAJW,oBAAoB,oCAApB,oBAAoB,QAI/B","sourcesContent":["import { Request } from 'express';\n\nexport interface IUserSchema {\n  name: string;\n  email: string;\n  password: string;\n  createdAt?: Date;\n  updatedAt?: Date | null;\n}\n\nexport interface AuthRequest extends Request {\n  user?: Partial<IUserSchema>;\n}\n\nexport enum IDataSourceTypes {\n  CEX = 'CEX',\n  DEX = 'DEX',\n}\n\nexport enum SupportedDataSources {\n  BINANCE = 'BINANCE',\n  CRYPTO_COMPARE = 'CRYPTO_COMPARE',\n  UNISWAP = 'UNISWAP',\n}\n\nexport interface ISupportedDataSourceSchema {\n  name: SupportedDataSources;\n  sourceType: IDataSourceTypes;\n  createdAt?: Date;\n  updatedAt?: Date | null;\n}\n\nexport interface IDataSourceSchema {\n  tokenPair: ITokenPairSchema;\n  source: ISupportedDataSourceSchema;\n  createdAt?: Date;\n  updatedAt?: Date | null;\n}\n\nexport interface ITokenPairSchema {\n  symbol: string;\n  address: string;\n  price: number;\n  dataSources: IDataSourceSchema[];\n  createdAt?: Date;\n  updatedAt?: Date | null;\n}\n"]}