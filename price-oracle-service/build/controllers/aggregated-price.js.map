{"version":3,"file":"aggregated-price.js","sourceRoot":"","sources":["../../src/controllers/aggregated-price.ts"],"names":[],"mappings":";;;;;;;;;;;;AACA,sCAA2C;AAC3C,oCAAyC;AACzC,0CAAyD;AAElD,MAAM,kBAAkB,GAAG,CAAO,GAAY,EAAE,GAAa,EAAE,IAAkB,EAAE,EAAE;IAC1F,MAAM,EAAE,MAAM,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC;IAE9B,IAAI,CAAC;QACH,MAAM,aAAa,GAAG,MAAM,uBAAY,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QAErD,IAAI,aAAa,EAAE,CAAC;YAClB,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC;QACzD,CAAC;QAED,MAAM,SAAS,GAAG,MAAM,uBAAc,CAAC,OAAO,CAAC,EAAE,MAAM,EAAE,CAAC,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,IAAI,EAAE,CAAC;QAE1F,IAAI,CAAC,SAAS,EAAE,CAAC;YACf,MAAM,IAAI,qBAAa,CAAC,sBAAsB,CAAC,CAAC;QAClD,CAAC;QAED,MAAM,eAAe,GAAG,MAAM,uBAAY,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;QAChE,MAAM,uBAAY,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC,CAAC;QAEhE,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;IAC/C,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC;IACrB,CAAC;AACH,CAAC,CAAA,CAAC;AAvBW,QAAA,kBAAkB,sBAuB7B","sourcesContent":["import { NextFunction, Request, Response } from 'express';\nimport { TokenPairModel } from '../models';\nimport { NotFoundError } from '../utils';\nimport { cacheService, priceService } from '../services';\n\nexport const getAggregatedPrice = async (req: Request, res: Response, next: NextFunction) => {\n  const { symbol } = req.params;\n\n  try {\n    const dataFromCache = await cacheService.get(symbol);\n\n    if (dataFromCache) {\n      return res.status(200).json(JSON.parse(dataFromCache));\n    }\n\n    const tokenPair = await TokenPairModel.findOne({ symbol }).populate('dataSources').exec();\n\n    if (!tokenPair) {\n      throw new NotFoundError('Token pair not found');\n    }\n\n    const aggregatedPrice = await priceService.aggregate(tokenPair);\n    await cacheService.set(symbol, JSON.stringify(aggregatedPrice));\n\n    return res.status(200).json(aggregatedPrice);\n  } catch (error) {\n    return next(error);\n  }\n};\n"]}